<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>heroSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State Variables

// Health etc.
hp = 100;
mp = 100;
state = "alive";

// Movement
moveDist = 64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

// Movement
// Keys
upKey = -keyboard_check(ord('w')) + -gamepad_button_check(0, gp_padu); // Upward movement
downKey = keyboard_check(ord('s')) + gamepad_button_check(0, gp_padd); // Downward movement
leftKey = keyboard_check(ord('a')) + gamepad_button_check(0, gp_padl); // Left movement
rightKey = keyboard_check(ord('d')) + gamepad_button_check(0, gp_padr); // Right movement

// Left Stick
hAxis = gamepad_axis_value(0, gp_axislh); // Horizontal left-stick movement
vAxis = gamepad_axis_value(0, gp_axislv); // Vertical left-stick movement

// Right Stick
hLookAxis = gamepad_axis_value(0, gp_axisrh); // Horizontal Aiming
vLookAxis = gamepad_axis_value(0, gp_axisrv); // Vertical Aiming

// Attacking, Speaking, Selection
useKey = keyboard_check_pressed(ord('k')) + gamepad_button_check_pressed(0, gp_face1); //Selection key
attackKey = keyboard_check_pressed(ord('l')) + gamepad_button_check_pressed(0, gp_shoulderr); // Attack key
blockKey = keyboard_check(ord(';')) + gamepad_button_check(0, gp_shoulderl); // Block key
specialKey1 = keyboard_check_pressed(ord('p')) + gamepad_button_check_pressed(0, gp_shoulderrb); // Right-trigger special attack
specialKey2 = keyboard_check_pressed(ord('o')) + gamepad_button_check_pressed(0, gp_shoulderlb); // Left-trigger special attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
